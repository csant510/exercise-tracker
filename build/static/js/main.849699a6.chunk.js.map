{"version":3,"sources":["components/NavBar/NavBar.jsx","utils/tokenService.js","utils/userService.js","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.js","pages/LoginPage/LoginPage.jsx","components/edit-Maintenance.component.js","components/create-Maintenance.component.js","components/create-car.component.js","components/Maintenance-list.component.js","pages/App/App.js","serviceWorker.js","index.js"],"names":["NavBar","props","nav","user","className","to","onClick","handleLogout","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","BASE_URL","signup","fetch","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","getUser","logout","login","creds","SignupForm","state","username","email","password","passwordConf","handleChange","e","updateMessage","setState","target","name","value","handleSubmit","a","preventDefault","userService","handleSignupOrLogin","history","push","message","this","onSubmit","placeholder","onChange","disabled","isFormInvalid","React","Component","SignupPage","msg","LoginPage","pw","alert","EditMaintenance","CreateMaintenance","onChangeModel","bind","onChangeDate","onChangeOil","onChangeFluid","onChangeTireRoation","onChangePrice","onChangeDescription","sate","model","date","oil","fluid","tireRoation","price","description","models","Maintenance","console","log","window","location","seected","onchange","class","CreateCar","onChangeMake","onChangeYear","onChangeMileage","make","year","mileage","Car","required","tupe","MaintenanceList","App","path","component","exact","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.849699a6.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = (props) => {\n    let nav = props.user ?\n        <>\n            <li className=\"nav-item\">\n            <Link to='/'><span className=\"nav-link\">Profile</span></Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=''><span className=\"nav-link\" onClick={props.handleLogout}>Log Out</span></Link>\n            </li>\n        </>\n        :\n        <>\n            <li className=\"nav-item\">\n                <Link to='/signup'><span className=\"nav-link\">Sign Up</span></Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to='/login'><span className=\"nav-link\">Log In</span></Link>\n            </li>\n        </>;\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <Link to='/'><span className=\"navbar-brand\">Car Tracker</span></Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <Link to='/'><span className=\"nav-link\">Maintenance List</span></Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to='/car'><span className=\"nav-link\">Create Car</span></Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to='/Create'><span className=\"nav-link\">Add Maintenace</span></Link>\n                    </li>\n                    {nav}\n                </ul>\n                \n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar;","function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login\n};","import React from 'react';\nimport userService from '../../utils/userService';\n\nclass SignupForm extends React.Component {\n\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        passwordConf: ''\n    };\n\n    handleChange = (e) => {\n            this.props.updateMessage('');\n            this.setState({\n              // Using ES2015 Computed Property Names\n              [e.target.name]: e.target.value\n            });\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n          await userService.signup(this.state);\n          // Let <App> know a user has signed up!\n          this.props.handleSignupOrLogin();\n          // Successfully signed up - show GamePage\n          this.props.history.push('/');\n        } catch (err) {\n          // Invalid user data (probably duplicate email)\n          this.props.updateMessage(err.message);\n        }\n      }\n\n    isFormInvalid() {\n            return !(this.state.username && this.state.email && this.state.password === this.state.passwordConf);\n    }\n\n    render() {\n        return (\n            <div className=\"mt-5\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-row mt-3 justify-content-md-center\">\n                        <div className=\"col-md-4\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.username} name=\"username\" onChange={this.handleChange} />\n                        </div>\n                    </div>\n                    <div className=\"form-row mt-3 justify-content-md-center\">\n                        <div className=\"col-md-4\">\n                            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n                        </div>\n                    </div>\n                    <div className=\"form-row mt-3 justify-content-md-center\">\n                        <div className=\"col-md-4\">\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n                        </div>\n                    </div>\n                    <div className=\"form-row mt-3 justify-content-md-center\">\n                        <div className=\"col-md-4\">\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n                        </div>\n                    </div>\n                    <div className=\"form-row mt-3 justify-content-md-center\">\n                        <div className=\"col-md-4 justify\">\n                            <button className=\"btn btn-outline-info\" disabled={this.isFormInvalid()}>Sign Up</button>&nbsp;&nbsp;\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SignupForm;","import React, { Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {message: ''}\n  }\n\n  updateMessage = (msg) => {\n    this.setState({message: msg});\n  }\n\n  render() {\n    return (\n      <div>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default SignupPage;","import React from 'react';\nimport userService from '../../utils/userService';\n\nclass LoginPage extends React.Component {\n\n    state = {\n        email: '',\n        pw: ''\n    };\n\n    handleChange = (e) => {\n        this.setState({\n        // Using ES2015 Computed Property Names\n            [e.target.name]: e.target.value\n        });\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await userService.login(this.state);\n            // // Let <App> know a user has signed up!\n            this.props.handleSignupOrLogin();\n            // // Successfully signed up - show GamePage\n            this.props.history.push('/');\n        } catch (err) {\n            // Use a modal or toast in your apps instead of alert\n            alert('Invalid Credentials!');\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"mt-5\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-row mt-3 justify-content-md-center\">\n                        <div className=\"col-md-4\">\n                            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n                        </div>\n                    </div>\n                    <div className=\"form-row mt-3 justify-content-md-center\">\n                        <div className=\"col-md-4\">\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n                        </div>\n                    </div>\n                    <div className=\"form-row mt-3 justify-content-md-center\">\n                        <div className=\"col-md-4 justify\">\n                            <button className=\"btn btn-outline-info\">Login</button>&nbsp;&nbsp;\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;","import React, { Component } from 'react';\n\nexport default class EditMaintenance extends Component{\n    render(){\n        return (\n            <div>\n                <p>Edit Maintenance</p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class CreateMaintenance extends Component{\n    constructor(props){\n        super(props);\n        this.onChangeModel = this.onChangeModel.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onChangeOil = this.onChangeOil.bind(this);\n        this.onChangeFluid = this.onChangeFluid.bind(this);\n        this.onChangeTireRoation = this.onChangeTireRoation.bind(this);\n        this.onChangePrice = this.onChangePrice.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n\n        this.sate = {\n            model: '',\n            date: new Date(),\n            oil: false,\n            fluid: false,\n            tireRoation: false,\n            price: 0,\n            description: '',\n            models:[]\n        }\n    }\n    onChangeModel(e){\n        this.setState({\n            model: e.target.value\n        });\n    }\n    onChangeDate(date){\n        this.setState({\n            date: date\n        });\n    }\n    onChangeOil(e){\n        this.setState({\n            oil: e.target.value\n        });\n    }\n    onChangeFluid(e){\n        this.setState({\n            fluid: e.target.value\n        });\n    }\n    onChangeTireRoation(e){\n        this.setState({\n            tireRoation: e.target.value\n        });\n    }\n    onChangePrice(e){\n        this.setState({\n            price: e.target.value\n        });\n    }\n    onChangeDescription(e){\n        this.setState({\n            description: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n    \n        const Maintenance = {\n          model: this.state.model,\n          date: this.state.date,\n          oil: this.sate.oil,\n          fluid: this.sate.fluid,\n          tireRoation: this.state.tireRoation,\n          price: this.state.price,\n          description: this.state.description,\n        }\n    \n        console.log(Maintenance);\n    \n    //    axios.post('http://localhost:5000/exercises/add', Maintenance)\n    //      .then(res => console.log(res.data));\n    \n        window.location = '/';\n      }\n    \n\n    render(){\n        return (\n           <div>\n               <h3> Create Maintenance Log </h3>\n               <form onSubmit={this.onSubmit}>\n               <div className=\"form-group\"> \n               <label>Model: </label>\n\n               </div>\n               <div className=\"form-group\">\n                   <label>Date: </label>\n                   <div>\n                    <DatePicker\n                    seected={this.sate.date}\n                    onchange={this.onChangeDate}\n                    />\n                   </div>\n               </div>\n\n               <div class=\"form-check\">\n                   <label>Oil</label>\n                   <input type=\"checkbox\" className=\"form-control\"\n                   value={this.sate.oil}\n                   onChange={this.onChangeOil}/>\n\n                 <label>fluid</label>\n                   <input type=\"checkbox\" className=\"form-control\"\n                   value={this.sate.fluid}\n                   onChange={this.onChangeFluid}/>\n\n                    <label>Tire Roation</label>\n                   <input type=\"checkbox\" className=\"form-control\"\n                   value={this.sate.tireRoation}\n                   onChange={this.onChangeTireRoation}/>\n\n               </div>\n               <div className=\"form-group\">\n                   <label>Price: </label>\n                   <input \n                   type=\"text\" \n                   className=\"form-control\"\n                   value={this.sate.price}\n                   onChange={this.onChangePrice}\n                   />\n                </div>\n\n               <div className=\"form-group\"> \n               <label>Description: </label>\n               <input  type=\"text\"\n               className=\"form-control\"\n               value={this.sate.description}\n               onChange={this.onChangeDescription}\n              />\n                </div>\n                <div className=\"form-group\">\n                 <input type=\"submit\" value=\"Create Maintenance Log\" className=\"btn btn-primary\" />\n                 </div>\n               </form>              \n        </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class CreateCar extends Component{\n    constructor(props){\n        super(props);\n        this.onChangeMake = this.onChangeMake.bind(this);\n        this.onChangeModel = this.onChangeModel.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onChangeMileage = this.onChangeMileage.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n\n        this.state = {\n            make: '',\n            model:'',\n            year: 0,\n            mileage: 0,\n        }\n    }\n    onChangeMake(e){\n        this.setState({\n            make: e.target.value\n        });\n    }\n    onChangeModel(e){\n        this.setState({\n            model: e.target.value\n        });\n    }\n\n    onChangeYear(e){\n        this.setState({\n            year: e.target.value\n        });\n    }\n    onChangeMileage(e){\n        this.setState({\n            mileage: e.target.value\n        });\n    }\n    \n\n    onSubmit(e) {\n        e.preventDefault();\n    \n        const Car = {\n          make: this.state.make,\n          model: this.sate.model,\n          year: this.sate.year,\n          mileage: this.state.mileage,\n        }\n    \n        console.log(Car);\n    \n    //    axios.post('http://localhost:5000/exercises/add', Car)\n    //      .then(res => console.log(res.data));\n    \n        window.location = '/';\n      }\n    \n\n    render(){\n        return (\n           <div>\n               <h3>Make: </h3>\n               <form onSubmit={this.onSubmit}>\n                <div className=\"from-group\">\n                    <label>Make: </label>\n                    <input type=\"text\"\n                    required\n                    className=\"form-control\"\n                    value={this.state.make}\n                    onChange={this.onChangeMake}\n                    />\n                \n                </div>\n                <div class=\"from-group\">\n                    <label>Model: </label>\n                    <input type=\"text\"\n                    required\n                    className=\"form-control\"\n                    value={this.state.model}\n                    onChange={this.onChangeModel}\n                    />\n                </div>\n                <div class=\"from-group\">\n                    <label>Year: </label>\n                    <input type=\"text\"\n                    required\n                    className=\"form-control\"\n                    value={this.state.year}\n                    onChange={this.onChangeYear}\n                    />\n                </div>\n                <div class=\"from-group\">\n                    <label>Mileage: </label>\n                    <input tupe=\"text\"\n                    required\n                    className=\"form-control\"\n                   value={this.state.mileage}\n                    onChange={this.onChangeMileage}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <br></br>\n                    <input type=\"submit\" value=\"Create Car\" className=\"btn btn-primary\" />\n                </div>\n               </form>\n           </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class MaintenanceList extends Component{\n \n    render(){\n        return (\n            <div>\n                <p>Maintenance List</p>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavBar from '../../components/NavBar/NavBar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SignupPage from '../../pages/SignupPage/SignupPage';\nimport LoginPage from '../../pages/LoginPage/LoginPage';\nimport userService from '../../utils/userService';\nimport EditMaintenance from \"../../components/edit-Maintenance.component\";\nimport CreateMaintenance from \"../../components/create-Maintenance.component\";\nimport CreateCar from \"../../components/create-car.component\";\nimport MaintenanceList from \"../../components/Maintenance-list.component\";\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      // Initialize user if there's a token, otherwise null\n      user: userService.getUser()\n    };\n  }\n\n  handleLogout = () => {\n    userService.logout();\n    console.log('user log out!')\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    console.log('handlesinguporlogin');\n    this.setState({user: userService.getUser()});\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <NavBar user={this.state.user} handleLogout={this.handleLogout} />\n        <br/>\n        <Route path=\"/edit/:id\" component={EditMaintenance} />\n        <Route path=\"/create\" component={CreateMaintenance} />\n        <Route path=\"/car\" component={CreateCar} />\n        <Route path=\"/\" exact component={MaintenanceList} />\n          \n          <Switch>\n            <Route exact path='/signup' render={({ history }) =>\n              <SignupPage\n                history={history}\n                handleSignupOrLogin={this.handleSignupOrLogin}\n              />\n            } />\n           \n            \n            <Route exact path='/login' render={({ history }) =>\n              <LoginPage\n                history={history}\n                handleSignupOrLogin={this.handleSignupOrLogin}\n              />\n            } />\n          </Switch>\n          \n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import ‘bootstrap/dist/js/bootstrap‘;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}